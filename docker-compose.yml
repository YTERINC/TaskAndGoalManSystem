services:
  nginx:
    container_name: nginx
    image: nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt

  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email y.terinc@gmail.com --agree-tos --no-eff-email --staging -d yterinc.ru -d www.yterinc.ru

  postgresql:
    container_name: postgresql
    image: postgres:alpine3.20
    environment:
      POSTGRES_DB: "tgms_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "123Vbdfg"
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data

  app:
    container_name: tgms
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE.DRIVER-CLASS-NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql/tgms_db
      - SPRING_DATASOURCE_USER=postgres
      - SPRING_DATASOURCE_PASSWORD=123Vbdfg
      - SERVER_PORT=8087
    ports:
      - "8087:8087"
    expose:
      - "8087"
    depends_on:
      - nginx
      - postgresql
    restart: always

volumes:
  db-data:
  certbot-etc:
  certbot-var:
  web-root: